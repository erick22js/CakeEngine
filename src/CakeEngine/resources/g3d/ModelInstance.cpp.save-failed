#include <CakeEngine/resources/g3d/ModelInstance.h>



CKModelMaterial *CKModelInstance::de_material = nullptr;
Int CKModelInstance::de_material_ref = 0;



void CKModelInstance::bind(){
	
}

void CKModelInstance::unbind(){
	
}


CKModelInstance::CKModelInstance(CKModelBuilder *builder, CKMesh *mesh, CKShaderProgram *material):CKRenderable(mesh, program){
	this->mesh = mesh;
	this->program = material;
}


void CKModelInstance::render(CKRenderer *renderer, CKMat4 *mat){
	de_material->use();
	glUniform1i(de_material->u_tex0, 0);
	glUniformMatrix4fv(de_material->u_mat, 1, GL_FALSE, mat->values);
	renderer->render(this);
}


CKModelInstance::~CKModelInstance(){
	//builder->de_mesh_ref--;
}


/**
	MODEL BUILDER
*/


void CKModelBuilder::dosomething(CKMeshBuilder **mbuilder, CKModelMaterial **mmat){
	*mmat = new CKModelMaterial();
	*mbuilder = new CKMeshBuilder((*mmat)->getAttribs());
}


CKModelBuilder::CKModelBuilder(){
	if(!CKModelInstance::de_material){
		CKModelInstance::de_material = new CKModelMaterial();
	}
	CKModelInstance::de_material_ref++;
	
	mesh_builder = new CKMeshBuilder(CKModelInstance::de_material->getAttribs());
}

CKModelBuilder::~CKModelBuilder(){
	if(!de_mesh_ref){
		delete de_mesh;
	}
}


CKModelMaterial *CKModelBuilder::getMaterial(){
	return CKModelInstance::de_material;
}


CKModelInstance *CKModelBuilder::build(){
	if(!de_mesh){
		de_mesh = mesh_builder->createMesh();
	}
	de_mesh_ref++;
	
	CKModelInstance *instance = new CKModelInstance(this, de_mesh, CKModelInstance::de_material);
	//return (CKModelInstance*)new CKRenderable(de_mesh, CKModelInstance::de_material);//instance;
	return instance;
}
